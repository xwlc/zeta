## /etc/sysctl.conf - Configure kernel parameters at boot
##
## See /etc/sysctl.d/ for more kernel variables.
## See `man 8 sysctl` for parameters at runtime.
## See `man 5 sysctl.conf` for details information.
## See `man 5 sysctl.d` for extra drop-in configuration.

############################################################
## swappiness controls the tendency of kernel to move RAM data onto the SWAP.
## - swappiness can only have a value of between 0 and 100
## - swappiness=0     avoid swapping data out of RAM if possible
## - swappiness=100   aggressively swap data onto the SWAP cache
##
## Check current swappiness by run `cat /proc/sys/vm/swappiness`
## Temporary change(lost on reboot) by `sudo sysctl vm.swappiness=10`
vm.swappiness = 10

############################################################
## `cat /proc/sys/kernel/domainname`
## See `man domainname` for more info.
#kernel.domainname = example.com

# Uncomment following to stop low-level messages on console
#kernel.printk = 3 4 1 3

############################################################
## Functions previously found in netbase

## Turn on Source Address Verification in all
## interfaces to prevent some spoofing attacks
## Enable Spoof protection (reverse-path filter)
#net.ipv4.conf.default.rp_filter = 1
#net.ipv4.conf.all.rp_filter     = 1

## See http://lwn.net/Articles/277146/
## NOTE This may impact IPv6 TCP sessions too
## Uncomment the next line to enable TCP/IP SYN cookies
#net.ipv4.tcp_syncookies = 1

## Uncomment the next line to enable packet forwarding for IPv4
#net.ipv4.ip_forward = 1

## Uncomment the next line to enable packet forwarding for IPv6
## Enable this option disables Stateless Address Autoconfiguration
## based on Router Advertisements for this host
#net.ipv6.conf.all.forwarding = 1

############################################################
## These settings can improve the network security of the host and prevent
## against some network attacks including spoofing attacks and man in the
## middle attacks through redirection. Some network environments, however,
## require that these settings are disabled so review/enable them as needed.

## Do not accept ICMP redirects (prevent MITM attacks)
#net.ipv4.conf.all.accept_redirects = 0
#net.ipv6.conf.all.accept_redirects = 0
## -- OR -- ##
## Accept ICMP redirects only for gateways listed
## in our default gateway list (enabled by default)
#net.ipv4.conf.all.secure_redirects = 1

## Do not send ICMP redirects (we are not a router)
#net.ipv4.conf.all.send_redirects = 0

## Do not accept IP source route packets (we are not a router)
#net.ipv4.conf.all.accept_source_route = 0
#net.ipv6.conf.all.accept_source_route = 0

## Log Martian Packets
#net.ipv4.conf.all.log_martians = 1

############################################################
## Kernel Magic SysRq(System Request) Key
##
## The magic SysRq key enables certain keyboard combinations to be
## interpreted by kernel to help debugging. The kernel will respond
## to these keys regardless of the current running applications.
##
## In general, the magic SysRq key is not needed for the average Ubuntu
## system, and having it enabled by default can lead to security issues
## on the console such as being able to dump memory or to kill arbitrary
## processes including the running screen lock.
##
## To check the current value by `cat /proc/sys/kernel/sysrq`
## https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html
##
## Here is the list of possible values
##   0 - disable sysrq completely
##   1 - enable all functions of sysrq
##   bitmask of allowed sysrq functions
##     2 - 0x2   - enable control of console logging level
##     4 - 0x4   - enable control of keyboard (SAK, unraw)
##     8 - 0x8   - enable debugging dumps of processes etc.
##    16 - 0x10  - enable sync command
##    32 - 0x20  - enable remount read-only
##    64 - 0x40  - enable signalling of processes (term, kill, oom-kill)
##   128 - 0x80  - allow reboot/poweroff
##   256 - 0x100 - allow nicing of all RT tasks
##
## 10  = 8 + 2
#kernel.sysrq = 10
## 176 = 128 + 32 + 16
#kernel.sysrq = 176
## 438 = 256 + 128 + 32 + 16 + 4 + 2
#kernel.sysrq = 438
